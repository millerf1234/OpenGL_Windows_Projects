{\rtf1\ansi\deff0\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\fmodern\fprq1\fcharset128 Consolas;}{\f4\fnil\fprq2\fcharset0 Microsoft YaHei;}{\f5\fnil\fprq2\fcharset0 Arial Unicode MS;}{\f6\fswiss\fprq0\fcharset128 Arial Unicode MS;}}
{\colortbl;\red0\green0\blue0;\red128\green128\blue128;}
{\stylesheet{\s0\snext0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033 Default;}
{\s15\sbasedon0\snext16\sb240\sa120\keepn\hich\af4\dbch\af5\afs28\loch\f2\fs28 Heading;}
{\s16\sbasedon0\snext16\sb0\sa120 Text body;}
{\s17\sbasedon16\snext17\sb0\sa120\dbch\af6 List;}
{\s18\sbasedon0\snext18\sb120\sa120\noline\i\dbch\af6\afs24\ai\fs24 Caption;}
{\s19\sbasedon0\snext19\noline\dbch\af6 Index;}
}{\info{\creatim\yr0\mo0\dy0\hr0\min0}{\revtim\yr0\mo0\dy0\hr0\min0}{\printim\yr0\mo0\dy0\hr0\min0}{\comment OpenOffice}{\vern4120}}\deftab709

{\*\pgdsctbl
{\pgdsc0\pgdscuse195\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Default;}}
\formshade\paperh15840\paperw12240\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
\pgndec\pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f3
//-----------------------------------------------------------//}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f3
//  Here is the code that was used to perform the profiling  //}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f3
//-----------------------------------------------------------//}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
//////////////////////////////////////////}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
// glUseProgram() Overhead Profiling Test}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
//////////////////////////////////////////}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
glUseProgram(0u);}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
constexpr const size_t iterationCount = 100'000'000U;}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
const GLuint sceneShaderID = sceneShader->ID();}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
const GLuint quadShaderID = quadTextureTestShader->ID();}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
int dataVal = 0;}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
Timepoint tAlt0("Start of Alternating Test");}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
for (size_t i = 0; i < iterationCount; i++) \{}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
        }{\rtlch \ltrch\loch\loch\f3
if (i % 2 == 0)}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
            }{\rtlch \ltrch\loch\loch\f3
glUseProgram(sceneShaderID);}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
        }{\rtlch \ltrch\loch\loch\f3
else}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
            }{\rtlch \ltrch\loch\loch\f3
glUseProgram(quadShaderID);}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
\}}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
Timepoint tFinish_Alt("End of Alternating Test");}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
printf("\\nAlternating Test Completed!       [ITERATIONS RUN = %d]\\n", iterationCount);}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
printf("     [START]    t0 recorded time %f\\n", tAlt0.timepoint);}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
printf("     [Finish]   t1 recorded time %f\\n", tFinish_Alt.timepoint);}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
printf("[TOTAL TIME ELAPSED: %f\\n", tFinish_Alt.timepoint - tAlt0.timepoint);}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
//Reset}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
glUseProgram(0U);}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
//Trial 2}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
Timepoint tSame0("Start of \\'Same\\' Test");}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
for (size_t i = 0; i < iterationCount; i++) \{}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
        }{\rtlch \ltrch\loch\loch\f3
if (i % 2 == 0)}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
            }{\rtlch \ltrch\loch\loch\f3
glUseProgram(sceneShaderID);//sceneShader->use();}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
        }{\rtlch \ltrch\loch\loch\f3
else}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
            }{\rtlch \ltrch\loch\loch\f3
glUseProgram(sceneShaderID);}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
\}}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
Timepoint tFinish_Same("End of \\'SAME\\' Test");}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
printf("\\nSame Test Completed!       [ITERATIONS RUN = %d]\\n", iterationCount);}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
printf("     [START]    t0 recorded time %f\\n", tSame0.timepoint);}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
printf("     [Finish]   t1 recorded time %f\\n", tFinish_Same.timepoint);}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
printf("[TOTAL TIME ELAPSED: %f\\n", tFinish_Same.timepoint - tSame0.timepoint);}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
printf("\\n\\n%s\\n\\n", tSame0.getAllTimepoints().c_str());}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
glfwIconifyWindow(mainRenderWindow);}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
std::cin.get();}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
glfwRestoreWindow(mainRenderWindow);}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
///////////////////////////////////////////////}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
////   End Profiling Test}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\rtlch \ltrch\loch\loch\f3
///////////////////////////////////////////////}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f3
//-----------------------------------------------------------//}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f3
//                     Here are the results                  //}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f3
//-----------------------------------------------------------//}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
 }{\rtlch \ltrch\loch\loch\f3
Iterations Run:  10,000,000    [Ten Million]           Each value is in units of seconds}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
 }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
                  }{\rtlch \ltrch\loch\loch\f3
Trial 1                  Trial 2                  Trial 3}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
                                                                                   }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
 }{\rtlch \ltrch\loch\loch\f3
Alternating       48.72                    51.10               [Never Recorded]}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
Active Program }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
Same Active        36.02                    35.65                    "  "}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
  }{\rtlch \ltrch\loch\loch\f3
Program}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
    }{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f3
ONE MORE THING WORTH MENTIONING: }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
  }{\rtlch \ltrch\loch\loch\f3
Just to get a sense of how fast these function calls were taking to complete }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
  }{\rtlch \ltrch\loch\loch\f3
in comparison to other common single function calls, I replaced all calls }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
  }{\rtlch \ltrch\loch\loch\f3
to 'glUseProgram()' with calling 'operator++' on an integer variable declared}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
  }{\rtlch \ltrch\loch\loch\f3
before the start of each loop. While I didn't write down the exact numbers, }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
  }{\rtlch \ltrch\loch\loch\f3
switching to this operation made each loop take over 3 times as long to complete }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
  }{\rtlch \ltrch\loch\loch\f3
when compared with calling glUseProgram(). }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
  }{\strike\rtlch \ltrch\loch\loch\f3
This leads me to believe that a good lot of the overhead in these profiling tests}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\strike\rtlch \ltrch\loch\f3
  }{\strike\rtlch \ltrch\loch\loch\f3
is not from what I am trying to measure but instead is introduced simply in incrementing}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\strike\rtlch \ltrch\loch\f3
  }{\strike\rtlch \ltrch\loch\loch\f3
'i' in each for loop}{\strike0\rtlch \ltrch\loch\loch\f3
.  [UPDATE: After performing the tests described below in the }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\strike0\rtlch \ltrch\loch\f3
  }{\strike0\rtlch \ltrch\loch\loch\f3
'ADDITIONAL_RESULTS' section, I no longer believe that there is much overhead from }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\strike0\rtlch \ltrch\loch\f3
   }{\strike0\rtlch \ltrch\loch\loch\f3
operating the 'for' loops.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
  }{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f3
ADDITIONAL RESULTS}{\rtlch \ltrch\loch\loch\f3
:  }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
                       }{{\*\bkmkstart __DdeLink__3_2085039327}\rtlch \ltrch\loch\loch\f3
I decided to see if}{{\*\bkmkend __DdeLink__3_2085039327}\rtlch \ltrch\loch\loch\f3
 calling 'glUseProgram()' with parameter }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
                      }{\rtlch \ltrch\loch\loch\f3
'0u' would be any faster than when calling with actual }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
                      }{\rtlch \ltrch\loch\loch\f3
ShaderPrograms. I am happy to report that calling it with}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
                      }{\rtlch \ltrch\loch\loch\f3
'0u' took all of 5.85 seconds to complete all 10,000,000 operations.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
                      }{\rtlch \ltrch\loch\loch\f3
I also then decided to try profiling a loop with the body being a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
                      }{\rtlch \ltrch\loch\loch\f3
no-op (there was still a check to see if 'i' was odd or even each}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
                      }{\rtlch \ltrch\loch\loch\f3
iteration). This wound up completing all 10,000,000 iterations in }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
                      }{\rtlch \ltrch\loch\loch\f3
0.1742 seconds, but I am suspicious that the compiler is secretly }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
                      }{\rtlch \ltrch\loch\loch\f3
doing some hidden optimizations behind the scenes to achieve this}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
                      }{\rtlch \ltrch\loch\loch\f3
ridiculously fast time. }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
  }{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f3
CONCLUSION:}{\rtlch \ltrch\loch\loch\f3
   }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
      }{\rtlch \ltrch\loch\loch\f3
-) It probably is a safe bet to assume that the costs of calling 'glUseProgram()' }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
      }{\rtlch \ltrch\loch\loch\f3
are negligible in comparison to the costs of most every other operation. }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
      }{\rtlch \ltrch\loch\loch\f3
-) There is definitely a speed increase when calling 'glUseProgram()' with a}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
      }{\rtlch \ltrch\loch\loch\f3
ShaderProgram that is already active when compared with swapping between}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
      }{\rtlch \ltrch\loch\loch\f3
ShaderPrograms. This tells me the Context must be checking to see if each}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
      }{\rtlch \ltrch\loch\loch\f3
call to 'glUseProgram()' can simply return if the requested ShaderProgram}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
      }{\rtlch \ltrch\loch\loch\f3
is already in use. However, in any case, calling 'glUseProgram()' will be}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
      }{\rtlch \ltrch\loch\loch\f3
a fast operation.}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\loch\f3
}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\rtlch \ltrch\loch\f3
  }{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f3
Future Work:}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\b\afs32\ab\rtlch \ltrch\fs32\loch\f3
    }{\b0\afs24\ab0\rtlch \ltrch\loch\fs24\loch\f3
I would like to see what the running time of the loop is if each iteration calls}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\b0\afs24\ab0\rtlch \ltrch\fs24\loch\f3
     }{\b0\afs24\ab0\rtlch \ltrch\loch\fs24\loch\f3
a runtime-assigned function pointer that get set to point to a function whose contents}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\b0\afs24\ab0\rtlch \ltrch\fs24\loch\f3
     }{\b0\afs24\ab0\rtlch \ltrch\loch\fs24\loch\f3
simply are a no-op. The usage of the dynamically assigned function pointer might help}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\b0\afs24\ab0\rtlch \ltrch\fs24\loch\f3
     }{\b0\afs24\ab0\rtlch \ltrch\loch\fs24\loch\f3
prevent the compiler from sneaking in any pesky optimizations which may change the}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\b0\afs24\ab0\rtlch \ltrch\fs24\loch\f3
     }{\b0\afs24\ab0\rtlch \ltrch\loch\fs24\loch\f3
results. Additionally, this would provide a higher quality control group to serve as the}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\b0\afs24\ab0\rtlch \ltrch\fs24\loch\f3
     }{\b0\afs24\ab0\rtlch \ltrch\loch\fs24\loch\f3
baseline for making a judgment as to the expense of 'glUseProgram()', since it would }
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\b0\afs24\ab0\rtlch \ltrch\fs24\loch\f3
     }{\b0\afs24\ab0\rtlch \ltrch\loch\fs24\loch\f3
accurately mimic an OpenGL function call [since OpenGL functions are themselves dynamically}
\par \pard\plain \s0\nowidctlpar{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\hich\af7\langfe2052\dbch\af5\afs24\lang1081\loch\f0\fs24\lang1033{\b0\afs24\ab0\rtlch \ltrch\fs24\loch\f3
     }{\b0\afs24\ab0\rtlch \ltrch\loch\fs24\loch\f3
assigned function pointers]}{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f3
 }{\rtlch \ltrch\loch\loch\f3
   }
\par }