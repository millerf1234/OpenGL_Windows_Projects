UI Notes/Ideas/Philosophy/Justifications 
// Primary author:     Forrest Miller
// Document created:   Decemeber 2018 

This file contains various explanations and details regarding intially ideas and eventually
justification for how the user-experience/interface comes together. This document is more of
a scratch sheet of ideas that at some point would benefit from being rewritten (like after
this project gets some more practicle user interface elements beyond its current iterface
of undocumented single key press events)


/////////////////////////////////////////////////////////////////////////////////////////////
//////////                          Overall UI Philosophy                          //////////
/////////////////////////////////////////////////////////////////////////////////////////////

The UI should be intuitive and follow precents set by previous software applications. Weird/unusual
key cominations should be avoided (just try and use blender for 5 minutes to find out why).
When in doubt, search for a precedent. When in doubt, do what is the least unintuitive. 
Write code in a way such that actions are seperated from their specific input trigger and have the 
location in code where the two are linked be at a single location (no binding inputs willy-nilly all
over the place)
DO NOT PUT UI/LOGIC IN THE RENDER FUNCTIONS! [If Render loop serves double duty by also being game loop,
do best to keep all UI/Logic as seperate functions/objects/etc... of the render loop]




/////////////////////////////////////////////////////////////////////////////////////////////
//////////                         Accelerated Mouse Input                         //////////
/////////////////////////////////////////////////////////////////////////////////////////////

Concern/Issue:
It should be noted that in Windows 10, the cursor's position on the screen is not mapped using 
a constant function directly from the raw user input. Instead, by default Windows enables mouse 
accelaration, which is described in basic detail at:
                  https://www.howtogeek.com/321763/what-is-enhance-pointer-precision-in-windows/
[As of the current revision of Windows 10 as of December 2018, this accelaration can be toggled on/off 
 and even customized by going to Settings->Personalization->Themes then click the 'Mouse Cursor' option
 and go to the 'Pointer Options' tab]

Solution: TBD 
   Ideas:  
     (i)     (perhaps some sort of array of 'recent memory' that retains the displacement of the previous
                [insert_value] number of ticks, and then based off the sum/average [choose 1] of the 
				distance/displacement [choose 1] covered by the curser a speed boost can be applied)
     (ii)    (see if it is possible to piggy-back off the OS {though GLFW may prevent this})


More Sources to look at:
          http://discourse.glfw.org/t/high-precision-mouse-input/912  
              Which includes a link to:
              https://docs.microsoft.com/en-us/windows/desktop/DxTechArts/taking-advantage-of-high-dpi-mouse-movement

	      
		  
